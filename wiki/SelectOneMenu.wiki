#Adding dropdown menus to your forms

= Description =

The {{{selectOneMenu}}} component generates a normal dropdown field ({{{<select>}}} element) on your view. The possible options are backed by an associative array on your backing bean. When a user selects a value and submits the form, the key (and not the label) is transmitted to an associated field on the bean, which requires a public getter and setter.

= Example 1 =
{{{
<selectOneMenu options="#{SomeBean.options}" value="#{SomeBean.selectedOption}"/>
}}}

{{{
<?php
class DropdownBean extends RequestBean {

	private $selectedOption;
	private $options = array(123=>"Java", 456=>"PHP", 789=>"ASP");

	public function getOptions() {
		return $this->options;
	}

	// getter and setter for $selectedOption

}
?>
}}}

= Example 2 =
Sometimes you want to enable a user to submit a form just by selecting a value inside a dropdown field. You can easily include this behaviour by adding an {{{action}}} attribute to your component, containing theÂ action method that needs to be executing when a new value is selected:

{{{
<selectOneMenu options="#{SomeBean.options}" value="#{SomeBean.selectedOption}" action="#{SomeBean.submit}"/>
}}}

{{{
<?php
class SomeBean extends RequestBean {

	private $selectedOption;
	private $options = array(123=>"Java", 456=>"PHP", 789=>"ASP");

	public function getOptions() {
		return $this->options;
	}

	public function submit() {
		// do something
		return null;
	}

	// getter and setter for $selectedOption

}
?>
}}}